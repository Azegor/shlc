# keywords
keyword_if="if"
keyword_elif="elif"
keyword_el="el"
keyword_for="for"
keyword_whl="whl"
keyword_do="do"
keyword_brk="brk"
keyword_cnt="cnt"
keyword_var="var"
keyword_use="use"
keyword_fn="fn"
keyword_main="main"
keyword_ret="ret"
keyword_native="native"
keyword_op="op"

keyword_="nil"

esc_1="\\'"
esc_2="\\\""
esc_3="\\?"
esc_4="\\\\"
esc_5="\\0"
esc_6="\\a"
esc_7="\\b"
esc_8="\\f"
esc_9="\\n"
esc_a="\\r"
esc_b="\\t"
esc_c="\\v"

# types
type_int="int"
type_flt="flt"
type_boo="boo"
type_str="str"
type_vac="vac"
type_chr="chr"

# constants
constant_T="T"
constant_F="F"

# builtins
builtin_prt="prt"
builtin_prt_w="prt_w"
builtin_prtln="prtln"
builtin_sin="sin"
builtin_cos="cos"
builtin_tan="tan"

# operators
op_asn="="
op_eq="=="


op_add="+"
op_sub="-"
op_mul="*"
op_div="/"
op_mod="%"
op_xor="^"
op_bit_and="&"
op_bit_or="|"
op_lt="<"
op_gt=">"

op_add_assign="+="
op_sub_assign="-="
op_mul_assign="*="
op_div_assign="/="
op_mod_assign="%="
op_pow_assign="**="
op_increment="++"
op_decrement="--"
op_power="**"
op_lte="<="
op_gte=">="
op_eq="=="
op_neq="!="
op_log_and="&&"
op_log_or="||"
op_lshift="<<"
op_rshift=">>"
op_lshift_assign="<<="
op_rshift_assign=">>="
op_bit_and_assign="&="
op_bit_or_assign="|="
op_bit_xor_assign="^="

# other
fn_decl="fn x(x, y : int; a, b flt) : boo;"
fn_def="fn x(x, y : int) : boo { 1 }"
