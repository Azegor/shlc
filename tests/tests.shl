use std;

use "fib.shl";

fn dce()
{
    if F {
      prtln(2147483647);
    }
    whl F {
      prtln(0-2147483648);
    }

    var a = F;
    var b = T;

    if a && b && 1{
      prtln(51717);
    }
}

fn missingReturn1(boo a, b, c, d) : int
{
  if a {
    if b {
      if c {
        if d {ret 1;}
      } el {ret 1;}
    }
  } elif (b) {
    ret 1;
  } el {
    whl a && b { ret 1;}
  }
  ret 1;
}

fn missingReturn2(boo a, b, c, d) : int
{
  if a {
    if b {
      if c {
        if d {ret 1;}
      } el {ret 2;}
    }
  } elif (b) {
    ret 3;
  } el {
    whl a && b { ret 4;}
  }
  ret 5;
}

fn flt_neg() : flt
{
  var i = 1;
  var f = 1.0;

  var ni = -i;
  var nf = -f;
  ret ni + nf;
}

fn useVar(boo b){}
fn useVar(int i){}

fn expressions()
{
  var x : int;
  var y = 5;
  var b1, b2 : boo;

  /* type of system.out.println arg - is int */

  prtln(x);
  prtln(y);

  /* unary expressions */

  y = -x; x = -1;
  b1 = !T; b2 = !b1;

  /* *,/,% */

  x = 5 * 15352;
  y = x * x;
  y = 2345 / y;
//   y = x % (-y); // SIGFPE
  x = -5 / -6;

  /* +,- */

  y = x + x; y = x - x;
//   y = (x * x) + (y / y) - (x % y); // makes it undefined!

  /* <. <=, >, >= */

  b1 = (x < y) : boo; b1 = (y <= x) : boo; b1 = (x > x) : boo; b2 = (x >= 5) : boo;

//   b1 = (x*x - y % y <= 522) : boo; // SIGFPE
  b1 = (x*x -y+y >= 5 * 6 - 7 + 123 + x) : boo;

  /* ==, != */

  b1 = b1 == b2;
  b1 = x == y;
  b2 = b1 != b2;
  b2 = x != y;
  b1 = 25 == 52;
  b1 = 25 != 52;

  /* &&, || */

  b1 = T && F;
  b1 = T || F;
  b1 = b1 && b2;
  b1 = !b1 && !b2;
  b1 = b1 || b2;
  b1 = !b1 || !b2;
//   b1 = (x < y) || (x > y) && (x * x <= x / x) || (((((F))))); // SIGFPE

  useVar(x);
  useVar(y);
  useVar(b1);
  useVar(b2);
}

fn test_fib()
{
  prt(fib(0));
  prtln(fib_iter(0));
  prt(fib(1));
  prtln(fib_iter(1));
  prt(fib(2));
  prtln(fib_iter(2));
  prt(fib(3));
  prtln(fib_iter(3));
  prt(fib(4));
  prtln(fib_iter(4));
  prt(fib(5));
  prtln(fib_iter(5));
  prt(fib(6));
  prtln(fib_iter(6));
  prt(fib(7));
  prtln(fib_iter(7));
  prt(fib(8));
  prtln(fib_iter(8));
  prt(fib(9));
  prtln(fib_iter(9));

  prtln(fib_iter(10));
  prtln(fib_iter(100));
  prtln(fib_iter(1000));
  prtln(fib_iter(10000));
  for var i = 0; i < 100; ++i {
    var val = fib_iter(i);
    if val < 0 { brk; }
    prt(val);
    prt(' ');
  }
}

fn var_self_reference()
{
//   var x = x;
}

fn overload(int i){}
fn overload(chr i){}

fn ambig_overload()
{
//   overload(T);
}

fn main()
{
  dce();
  prt(missingReturn1(T, F, T, F));
  prt(missingReturn2(T, F, T, F));
  prt(flt_neg());
  expressions();
  test_fib();
  var_self_reference();
  ambig_overload();
  prtln("");
}
